const bel = require('bel')
const csjs = require('csjs-inject')
// widgets
const Graphic = require('Graphic')


function AppInfo(app, protocol) {
    const css = style
    let info = Graphic('./src/node_modules/assets/svg/info.svg', css.icon)
    let doc = Graphic('./src/node_modules/assets/svg/doc.svg', css.icon)
    let settings = Graphic('./src/node_modules/assets/svg/settings.svg', css.icon)
    let news = Graphic('./src/node_modules/assets/svg/news.svg', css.icon)
    let about = Graphic('./src/node_modules/assets/svg/about.svg', css.icon)
    let chat = Graphic('./src/node_modules/assets/svg/chat.svg', css.icon)
    let supplyTree = Graphic('./src/node_modules/assets/svg/supply-tree.svg', css.icon)
    let shrink = Graphic('./src/node_modules/assets/svg/double-arrow.svg', css.icon)

    const nav = bel` 
    <nav class=${css.nav}>
        <a href="#info" class=${css.current} onclick=${()=>switchPageHandler('#info')}>${info} Introduction</a>
        <a href="#doc" onclick=${()=>switchPageHandler('#doc')}>${doc} Documentation</a>
        <a href="#settings" onclick=${()=>switchPageHandler('#settings')}>${settings} Settings</a>
        <a href="#news" onclick=${()=>switchPageHandler('#news')}>${news} News</a>
        <a href="#about" onclick=${()=>switchPageHandler('#about')}>${about} About</a>
        <a href="#chat" onclick=${()=>switchPageHandler('#chat')}>${chat} Support Chat</a>
        <a href="#supplyTree" onclick=${()=>switchPageHandler('#supplyTree')}>${supplyTree} Supply tree</a>
    </nav>`

    const el = bel`
    <div class=${css.container}>
        <div class=${css.sidebar}>
           ${nav}
            <button class="${css.btn} ${css.shrink}">${shrink}</button>
        </div>
        <div class=${css.content}></div>
    </div>
    `
    return el

    function switchPageHandler(target) {
        // get all a tag name from nav
        const pages = nav.querySelectorAll('a')
        // switch current page
        pages.forEach( page => { 
            page.getAttribute('href') === target
            ? page.classList.add(css.current) 
            : page.classList.remove(css.current) } ) 
        }
}



const style = csjs`
.container {
    display: grid;
    grid-template: 1fr / 150px auto;
    height: 100%;
}
.sidebar {
    display: grid;
    grid-template-columns: 150px;
    grid-template-rows: auto 30px;
    grid-template-areas: 
    'nav'
    'shrink';
    background-color: var(--appInfoSidebarBgColor);
}
.nav {
    grid-area: nav;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(auto-fit, 44px);
    grid-auto-flow: column;
}
.nav a {
    display: grid;
    grid-template-rows: 1fr;
    grid-template-columns: 38px auto;
    align-items: center;
    font-size: var(--appInfoSidebarFontSize);
    color: var(--appInfoSidebarColor);
    text-decoration: none;
}
/* current page info */
.current {
    background-color: var(--appInfoSidebarNavCurrentBgColor);
}
.icon {
    justify-self: center;
}
.btn {
   outline: none;
}
.btn:hover {
    background-color: var(--appInfoSidebarShrinkHoverBgColor);
}
.shrink {
    grid-area: shrink;
    display: block;
    text-align: right;
    background-color: var(--appInfoSidebarShrinkBgColor);
}
/* App info */
.content {

}

`

module.exports = AppInfo