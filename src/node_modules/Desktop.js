const bel = require('bel')
const csjs = require('csjs-inject')
// widgets
const Graphic = require('Graphic')
const fetchFromGithub = require('fetchFromGithub')

function Desktop(data, protocol, done) {
    let css = style
    const title = data.title.split(' ').join('').toLowerCase()
    const url  = `${data.link}/dist/${data.versions.latest}`

    if ( data.icon.includes('svg') ) {
        var icon = Graphic(`${url}/${data.icon}`, css.icon)
    } else {
        var icon = bel`<div class=${css.icon}><img src="${url}/${data.icon}"></div>`
    }

    const el = bel`
    <div class="${css["app-icon"]} ${title}" onclick=${ () => protocol({ url: data.link, title }, data) }>
        ${icon}      
        <span class=${css['app-name']}>${data.title}</span>
    </div>
        `

    return  done(null, el)
}



const style = csjs`
.app-icon {
    display: grid;
    grid-template-rows: 60px auto;
    text-align: center;
    justify-items: center;
    cursor: pointer;
    overflow: hidden;
    grid-gap: 7px 0;
    width: 100%;
}
.app-name {
    font-size: var(--appNameFontSize);
    color: var(--appNameColor);
    word-break: break-word;
}
.app-icon:hover div svg g path {
    fill: var(--appHoverColor);
}
.app-icon:hover div svg g rect {
    fill: var(--appHoverColor);
}
.app-icon:hover .app-name {
    color: var(--appHoverColor);
    text-decoration: underline;
}
.icon {
    width: 60px;
}
`

module.exports = Desktop