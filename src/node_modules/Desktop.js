const bel = require('bel')
const csjs = require('csjs-inject')
// widgets
const Graphic = require('Graphic')

function Desktop(icons, tartget) {
    const csjs = require('csjs-inject')
    const css = style

    const desktop  = bel`<main class=${css.desktop} role="desktop"></main>`
    const el = bel`
        <div class=${css["app-list"]}>
        ${icons.map( icon => {
            return bel`
                <div class="${css.app} ${icon.name}" onclick=${()=>tartget(icon)}>
                    ${Graphic(icon.url)}
                    <span class=${css.appName}>${icon.title}</span>
                </div>`
            }
        )}
        </div>
    `

    desktop.appendChild(el)

    document.addEventListener('DOMContentLoaded', ()=>{
        desktop.clientHeight = '500px'
    })

    return desktop
}


const style = csjs`
.desktop {
    display: grid;
    grid-template-columns: auto;
    grid-template-rows: calc(100vh - 43px) 43px;
}
.app-list {
    padding: 20px 20px 0 20px;
    display: grid;
    grid-template-columns: repeat(15, 88px);
    grid-template-rows: repeat(8, 88px);
    gap: 0px 22px;
    grid-auto-flow: column;
}
.app {
    display: grid;
    grid-template: 60px auto / auto;
    justify-self: center;
    text-align: center;
    cursor: pointer;
    overflow: hidden;
}
.appName {
    font-size: var(--appNameFontSize);
    color: var(--appNameColor);
    word-break: break-word;
}
.app:hover div svg g path {
    fill: var(--appHoverColor);
}
.app:hover div svg g rect {
    fill: var(--appHoverColor);
}
.app:hover .appName {
    color: var(--appHoverColor);
    text-decoration: underline;
}

@media screen and (max-width: 2560px) and (max-height: 1600px) {
    .app-list { 
        grid-template-columns: repeat(22, 88px);
        grid-template-rows: repeat(14, 88px);
        gap: 20px 28px;
    }
}
@media screen and (max-width: 1920px) and (max-height: 1080px) {
    .app-list { 
        grid-template-columns: repeat(17, 88px);
        grid-template-rows: repeat(11, 88px);
        gap: 0px 24px;
    }
}
@media screen and (max-width: 1680px) and (max-height: 1080px) {
    .app-list { 
        grid-template-columns: repeat(15, 88px);
        grid-template-rows: repeat(9, 88px);
        gap: 0px 23px;
    }
}
@media screen and (max-width: 1440px) and (max-height: 900px) {
    .app-list { 
        grid-template-columns: repeat(13, 88px);
        gap: 0px 22px;
    }
}
@media screen and (max-width: 1366px) and (max-height: 768px) {
    .app-list { 
        grid-template-columns: repeat(12, 88px);
        grid-template-rows: repeat(6, 88px);
        gap: 20px 24px;
    }
}
@media screen and (max-width: 1280px) and (max-height: 720px) {
    .app-list { 
        grid-template-columns: repeat(11, 88px);
        grid-template-rows: repeat(7, 88px);
        gap: 0px 27px;
    }
}
@media screen and (max-width: 1024px)  and (max-height: 768px) {
    .app-list { 
        grid-template-columns: repeat(9, 88px);
        gap: 20px 23px;
    }
}
`

module.exports = Desktop